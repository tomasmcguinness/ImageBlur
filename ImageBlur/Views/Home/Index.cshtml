@{
  ViewBag.Title = "Index";
}
<!DOCTYPE html>
<html>
<head>
  <title>Blur - Remove private and sensitive information from images and photographs
  </title>
  <script src="~/Scripts/jquery-1.8.0.min.js"></script>
  <script src="~/Scripts/jquery.Jcrop.min.js"></script>
  <link rel="stylesheet" type="text/css" href="/Content/style.css" />
  <meta name="description" content="Easily hide private and sensitive information from images by blurring parts of the image before uploading or sending to friends.">
  <meta http-equiv="content-type" content="text/html;charset=UTF-8">
  <meta name="ROBOTS" content="INDEX, FOLLOW">

  <script>
    var currentFileName = null;
    var jcrop = null;

    function init() {
      $('#imageToBlur').Jcrop({ onSelect: blurImage }, function () { jcrop = this; });
      var dropArea = document.getElementById("dropspot");
      dropArea.addEventListener("drop", acceptImage, false);
      dropArea.addEventListener("dragover", doNothing, false);
    }

    function dragEnter(event) {
    }

    function acceptImage(event) {

      doNothing(event);

      $("#dropspot").hide();
      $("#btnDownload").show();

      var filelist = event.dataTransfer.files;
      var file = filelist[0];

      var reader = new FileReader();

      // init the reader event handlers
      reader.onload = handleReaderLoad;

      // begin the read operation
      reader.readAsDataURL(file);

      var formData = new FormData();
      formData.append('file', file);

      // now post a new XHR request
      var xhr = new XMLHttpRequest();
      xhr.open('POST', '/Home/UploadImage');

      xhr.onload = function () {
        if (xhr.status === 200) {
          console.log('Image successfully uploaded with the name: ' + xhr.responseText);
          currentFileName = xhr.responseText.substring(1, xhr.responseText.length - 1)
        } else {
          console.log('Something went terribly wrong...' + +xhr.status);
        }
      };

      xhr.send(formData);
    }

    function handleReaderLoad(evt) {
      console.log("Image successfully read from disk");

      $("#imageToBlur").show();

      var img = document.getElementById("imageToBlur");
      img.src = evt.target.result;
    }

    function blurImage(c) {

      $("#processingDiv").show();

      console.log("Request section of image " + currentFileName + " to be blurred");
      console.log('Bounds: x=' + Math.round(c.x) + '&y=' + Math.round(c.y) + '&x2=' + Math.round(c.x2) + '&y2=' + Math.round(c.y2));

      jcrop.release();

      var xhr = new XMLHttpRequest();

      xhr.open('POST', '/Home/BlurSection?fileName=' + currentFileName + '&x=' + Math.round(c.x) + '&y=' + Math.round(c.y) + '&x2=' + Math.round(c.x2) + '&y2=' + Math.round(c.y2));

      xhr.onload = function () {
        if (xhr.status === 200) {
          console.log("BlueSection Complete: " + xhr.status + ". Name for image: " + xhr.responseText);
          console.log("Updating Onscreen Image...");

          jcrop.destroy();

          var img = document.getElementById("imageToBlur");
          img.src = "/Home/Image?name=" + xhr.responseText.substring(1, xhr.responseText.length - 1);

          $('#imageToBlur').Jcrop({ onSelect: blurImage }, function () { jcrop = this; });

          currentFileName = xhr.responseText.substring(1, xhr.responseText.length - 1)

          $("#processingDiv").hide();

        } else {
          console.log('Something went terribly wrong...' + xhr.responseText);
        }
      };

      xhr.send();
    }

    // Prevents the event from continuing so our handlers can process the event.
    function doNothing(event) {
      event.stopPropagation();
      event.preventDefault();
    }

    function uploadFile() {
      var xhr = new XMLHttpRequest();
      var fd = document.getElementById('form1').getFormData();

      /* event listners */
      xhr.upload.addEventListener("progress", uploadProgress, false);
      xhr.addEventListener("load", uploadComplete, false);
      xhr.addEventListener("error", uploadFailed, false);
      xhr.addEventListener("abort", uploadCanceled, false);
      /* Be sure to change the url below to the url of your upload server side script */
      xhr.open("POST", "UploadMinimal.aspx");
      xhr.send(fd);
    }

    function downloadImage() {
      var link = document.getElementById("simpleLink");
      link.href = link.href = "/Home/Image?name=" + currentFileName;
      link.click();
    }

  </script>

  <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>

</head>
<body onload="init()">
  <article id="main">

    <div class="social">
      <div style="position: relative; top: 35px; display: inline">
        <a href="https://twitter.com/share" class="twitter-share-button" data-text="Blur - a simple web app that allows you to blur parts of an image with ease"
          data-via="tomasmcguinness" data-size="large">Tweet</a>
        <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
      </div>

    </div>
    <header>
      <h1>Blur</h1>
      <p>
        Blur is a simple service that will apply a Gaussian blur to any part of an image,
        allowing you to mask information or details before uploading the image to your blog
        etc. It only works in IE 10 at present.
      </p>
    </header>
    <div id="dropspot" style="position: relative; min-width: 500px; height: 100px; margin-left: auto;
      margin-right: auto; background-color: lightgray; text-align: center;">
      <div>Drag an image here for your desktop to get started</div>
    </div>
    <img id="imageToBlur" style="display: none; min-width: 50px; min-height: 50px;" />
    <div id="processingDiv" style="display: none;">
      PROCESSING:
            <img src="/Content/ajax-loader.gif" /><br />
    </div>

    <p>
      <button id="btnDownload" onclick="downloadImage()" style="display: none;">
        Download
        the image</button>
    </p>

    <a id="simpleLink" href="#" target="_blank"></a>

    <h2>How it works</h2>
    You can select regions of the image. Each time you select a region, a blur will
    be applied. This can take a 
        few seconds, so please be patient. Your images will remain on the server at
    present,
      so don't blur anything too sensitive if you're not comfortable having it online.
    I'm working to add a feature where your files are purged once your session is done.
    <h2>Notes</h2>
    At present, this application only works in IE 10, which is available on Windows
    Source is available at <a href="https://github.com/tomasmcguinness/ImageBlur">https://github.com/tomasmcguinness/ImageBlur</a>
    <h2>Credits</h2>
    A big thanks to Haishi for this <a href="http://blur.azurewebsites.net/">blog post
      on gaussian filtering</a>
    <h2>About me</h2>
    <p>
      I'm Tomas McGuinness, a C# and iOS developer. I blog over at <a href="http://www.tomasmcguinness.com">
        www.tomasmcguinness.com</a>.  If you have any questions or suggestions, email
      me at <a href="mailto:tomas@tomasmcguinness.com">tomas@tomasmcguinness.com</a>
    </p>
    <a href="https://twitter.com/tomasmcguinness" class="twitter-follow-button" data-show-count="false"
      data-size="large"
      data-lang="en">Follow @@tomasmcguinness</a>
  </article>
</body>
</html>
